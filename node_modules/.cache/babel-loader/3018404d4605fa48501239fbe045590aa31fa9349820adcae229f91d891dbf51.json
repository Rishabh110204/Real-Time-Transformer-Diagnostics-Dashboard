{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\LiveMap\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const db = getDatabase();\n    const locationRef = ref(db, 'coordinates');\n    onValue(locationRef, snapshot => {\n      const data = snapshot.val();\n      console.log(\"Raw Firebase data:\", data);\n      if (data) {\n        let lat, lng;\n        if (typeof data === 'object' && 'latitude' in data && 'longitude' in data) {\n          lat = data.latitude;\n          lng = data.longitude;\n        } else if (Array.isArray(data) && data.length >= 2) {\n          [lat, lng] = data;\n        } else {\n          console.error(\"Unexpected data format:\", data);\n          setError(\"Unexpected data format. Check console for details.\");\n          return;\n        }\n        if (typeof lat === 'number' && typeof lng === 'number') {\n          setLocation({\n            lat,\n            lng\n          });\n        } else {\n          setError(`Invalid coordinates: lat=${lat}, lng=${lng}`);\n        }\n      } else {\n        setError(\"No data found in Firebase\");\n      }\n    }, error => {\n      console.error(\"Firebase error:\", error);\n      setError(`Error fetching location data: ${error.message}`);\n    });\n  }, []);\n  const mapContainerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBt0EBeEOhb6s_nvQqPBh_vYMFQXFG6gBc\",\n    children: location ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: location,\n      zoom: 10,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"T1fEaCzQdoK20qLAFqfcCiHV1Ow=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","getDatabase","ref","onValue","jsxDEV","_jsxDEV","MapComponent","_s","location","setLocation","error","setError","db","locationRef","snapshot","data","val","console","log","lat","lng","latitude","longitude","Array","isArray","length","message","mapContainerStyle","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","center","zoom","position","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/LiveMap/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { getDatabase, ref, onValue } from 'firebase/database';\r\n\r\nconst MapComponent = () => {\r\n  const [location, setLocation] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const db = getDatabase();\r\n    const locationRef = ref(db, 'coordinates');\r\n    \r\n    onValue(locationRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      console.log(\"Raw Firebase data:\", data);\r\n      \r\n      if (data) {\r\n        let lat, lng;\r\n        \r\n        if (typeof data === 'object' && 'latitude' in data && 'longitude' in data) {\r\n          lat = data.latitude;\r\n          lng = data.longitude;\r\n        } else if (Array.isArray(data) && data.length >= 2) {\r\n          [lat, lng] = data;\r\n        } else {\r\n          console.error(\"Unexpected data format:\", data);\r\n          setError(\"Unexpected data format. Check console for details.\");\r\n          return;\r\n        }\r\n        \r\n        if (typeof lat === 'number' && typeof lng === 'number') {\r\n          setLocation({ lat, lng });\r\n        } else {\r\n          setError(`Invalid coordinates: lat=${lat}, lng=${lng}`);\r\n        }\r\n      } else {\r\n        setError(\"No data found in Firebase\");\r\n      }\r\n    }, (error) => {\r\n      console.error(\"Firebase error:\", error);\r\n      setError(`Error fetching location data: ${error.message}`);\r\n    });\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    width: '100%',\r\n    height: '400px'\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyBt0EBeEOhb6s_nvQqPBh_vYMFQXFG6gBc\">\r\n      {location ? (\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          center={location}\r\n          zoom={10}\r\n        >\r\n          <Marker position={location} />\r\n        </GoogleMap>\r\n      ) : (\r\n        <div>Loading map...</div>\r\n      )}\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}