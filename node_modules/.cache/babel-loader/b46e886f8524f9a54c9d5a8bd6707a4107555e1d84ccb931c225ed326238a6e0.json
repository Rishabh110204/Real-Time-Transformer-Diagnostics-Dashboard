{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\LiveMap\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { app } from '../../firebase'; // Adjust the path as per your project structure\nimport { getDatabase, ref, onValue, off } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst database = getDatabase(app);\nconst MapContainer = () => {\n  _s();\n  const [coordinates, setCoordinates] = useState(null); // Initial state as null\n\n  useEffect(() => {\n    const fetchCoordinates = () => {\n      const coordinatesRef = ref(database, 'coordinates'); // Reference to 'coordinates' node\n      onValue(coordinatesRef, snapshot => {\n        const coords = snapshot.val();\n        if (coords) {\n          setCoordinates({\n            latitude: parseFloat(coords.latitude),\n            // Ensure the latitude is a number\n            longitude: parseFloat(coords.longitude) // Ensure the longitude is a number\n          });\n        }\n      });\n      return () => {\n        off(coordinatesRef); // Detach listener\n      };\n    };\n    fetchCoordinates();\n  }, []);\n  const mapContainerStyle = {\n    width: '90%',\n    height: '90%'\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBt0EBeEOhb6s_nvQqPBh_vYMFQXFG6gBc\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: coordinates ? 15 : 3 // Adjust zoom level as needed, zoom in if coordinates are available\n      ,\n      center: coordinates ? {\n        lat: coordinates.latitude,\n        lng: coordinates.longitude\n      } : {\n        lat: 0,\n        lng: 0\n      } // Default to (0,0) if coordinates are not yet available\n      ,\n      children: coordinates && /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: coordinates.latitude,\n          lng: coordinates.longitude\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"NYagvTsY0KW8OqYwzt5HLaBmVbk=\");\n_c = MapContainer;\nexport default MapContainer;\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","app","getDatabase","ref","onValue","off","jsxDEV","_jsxDEV","database","MapContainer","_s","coordinates","setCoordinates","fetchCoordinates","coordinatesRef","snapshot","coords","val","latitude","parseFloat","longitude","mapContainerStyle","width","height","googleMapsApiKey","children","zoom","center","lat","lng","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/LiveMap/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { app } from '../../firebase'; // Adjust the path as per your project structure\r\nimport { getDatabase, ref, onValue, off } from \"firebase/database\";\r\n\r\nconst database = getDatabase(app);\r\n\r\nconst MapContainer = () => {\r\n  const [coordinates, setCoordinates] = useState(null); // Initial state as null\r\n\r\n  useEffect(() => {\r\n    const fetchCoordinates = () => {\r\n      const coordinatesRef = ref(database, 'coordinates'); // Reference to 'coordinates' node\r\n      onValue(coordinatesRef, (snapshot) => {\r\n        const coords = snapshot.val();\r\n        if (coords) {\r\n          setCoordinates({\r\n            latitude: parseFloat(coords.latitude), // Ensure the latitude is a number\r\n            longitude: parseFloat(coords.longitude) // Ensure the longitude is a number\r\n          });\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        off(coordinatesRef); // Detach listener\r\n      };\r\n    };\r\n\r\n    fetchCoordinates();\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    width: '90%',\r\n    height: '90%'\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyBt0EBeEOhb6s_nvQqPBh_vYMFQXFG6gBc\"> {/* Replace with your Google Maps API key */}\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={coordinates ? 15 : 3} // Adjust zoom level as needed, zoom in if coordinates are available\r\n        center={coordinates ? { lat: coordinates.latitude, lng: coordinates.longitude } : { lat: 0, lng: 0 }} // Default to (0,0) if coordinates are not yet available\r\n      >\r\n        {coordinates && (\r\n          <Marker position={{ lat: coordinates.latitude, lng: coordinates.longitude }} />\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtE,SAASC,GAAG,QAAQ,gBAAgB,CAAC,CAAC;AACtC,SAASC,WAAW,EAAEC,GAAG,EAAEC,OAAO,EAAEC,GAAG,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,QAAQ,GAAGN,WAAW,CAACD,GAAG,CAAC;AAEjC,MAAMQ,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,cAAc,GAAGX,GAAG,CAACK,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;MACrDJ,OAAO,CAACU,cAAc,EAAGC,QAAQ,IAAK;QACpC,MAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;QAC7B,IAAID,MAAM,EAAE;UACVJ,cAAc,CAAC;YACbM,QAAQ,EAAEC,UAAU,CAACH,MAAM,CAACE,QAAQ,CAAC;YAAE;YACvCE,SAAS,EAAED,UAAU,CAACH,MAAM,CAACI,SAAS,CAAC,CAAC;UAC1C,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEF,OAAO,MAAM;QACXf,GAAG,CAACS,cAAc,CAAC,CAAC,CAAC;MACvB,CAAC;IACH,CAAC;IAEDD,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAG;IACxBC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACV,CAAC;EAED,oBACEhB,OAAA,CAACR,UAAU;IAACyB,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,GAAC,GAAC,eACtElB,OAAA,CAACT,SAAS;MACRuB,iBAAiB,EAAEA,iBAAkB;MACrCK,IAAI,EAAEf,WAAW,GAAG,EAAE,GAAG,CAAE,CAAC;MAAA;MAC5BgB,MAAM,EAAEhB,WAAW,GAAG;QAAEiB,GAAG,EAAEjB,WAAW,CAACO,QAAQ;QAAEW,GAAG,EAAElB,WAAW,CAACS;MAAU,CAAC,GAAG;QAAEQ,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAE,CAAE,CAAC;MAAA;MAAAJ,QAAA,EAErGd,WAAW,iBACVJ,OAAA,CAACP,MAAM;QAAC8B,QAAQ,EAAE;UAAEF,GAAG,EAAEjB,WAAW,CAACO,QAAQ;UAAEW,GAAG,EAAElB,WAAW,CAACS;QAAU;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC/E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACxB,EAAA,CA1CID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}