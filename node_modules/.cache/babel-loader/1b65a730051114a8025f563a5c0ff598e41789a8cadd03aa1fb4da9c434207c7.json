{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\All_Temp\\\\index.jsx\",\n  _s = $RefreshSig$();\n// TemperatureDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../../firebase'; // Adjust path to firebase.js as per your project structure\nimport '../All_Temp/Temp.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureDisplay = () => {\n  _s();\n  const [temperatures, setTemperatures] = useState([]);\n  useEffect(() => {\n    const temperaturesRef = firebase.database().ref('realtimedata');\n\n    // Attach an event listener for changes in temperatures\n    temperaturesRef.on('value', snapshot => {\n      const tempData = snapshot.val();\n      if (tempData) {\n        // Convert the snapshot to an array of objects\n        const tempArray = Object.keys(tempData).map(key => ({\n          id: key,\n          ...tempData[key]\n        }));\n        setTemperatures(tempArray);\n      }\n    });\n\n    // Clean up listener on component unmount\n    return () => temperaturesRef.off('value');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Temperature Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"temperature-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Oil Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LV Winding Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LV1 Winding Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LV2 Winding Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HV Winding Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: temperatures.map(temp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"temperature-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(temp.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: temp.ot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: temp.lvt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: temp.lv1t\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: temp.lv2t\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: temp.hvt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, temp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureDisplay, \"bFUqW0EkzQyiLDuCYWpIj14n8No=\");\n_c = TemperatureDisplay;\nexport default TemperatureDisplay;\nvar _c;\n$RefreshReg$(_c, \"TemperatureDisplay\");","map":{"version":3,"names":["React","useEffect","useState","firebase","jsxDEV","_jsxDEV","TemperatureDisplay","_s","temperatures","setTemperatures","temperaturesRef","database","ref","on","snapshot","tempData","val","tempArray","Object","keys","map","key","id","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","temp","Date","timestamp","toLocaleString","ot","lvt","lv1t","lv2t","hvt","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/All_Temp/index.jsx"],"sourcesContent":["// TemperatureDisplay.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport firebase from '../../firebase'; // Adjust path to firebase.js as per your project structure\r\nimport '../All_Temp/Temp.css'; // Import CSS file for styling\r\n\r\nconst TemperatureDisplay = () => {\r\n  const [temperatures, setTemperatures] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const temperaturesRef = firebase.database().ref('realtimedata');\r\n\r\n    // Attach an event listener for changes in temperatures\r\n    temperaturesRef.on('value', (snapshot) => {\r\n      const tempData = snapshot.val();\r\n      if (tempData) {\r\n        // Convert the snapshot to an array of objects\r\n        const tempArray = Object.keys(tempData).map((key) => ({\r\n          id: key,\r\n          ...tempData[key],\r\n        }));\r\n        setTemperatures(tempArray);\r\n      }\r\n    });\r\n\r\n    // Clean up listener on component unmount\r\n    return () => temperaturesRef.off('value');\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"temperature-container\">\r\n      <h2>Real-Time Temperature Values</h2>\r\n      <table className=\"temperature-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Time</th>\r\n            <th>Oil Temperature</th>\r\n            <th>LV Winding Temperature</th>\r\n            <th>LV1 Winding Temperature</th>\r\n            <th>LV2 Winding Temperature</th>\r\n            <th>HV Winding Temperature</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {temperatures.map((temp) => (\r\n            <tr key={temp.id} className=\"temperature-row\">\r\n              <td>{new Date(temp.timestamp).toLocaleString()}</td>\r\n              <td>{temp.ot}</td>\r\n              <td>{temp.lvt}</td>\r\n              <td>{temp.lv1t}</td>\r\n              <td>{temp.lv2t}</td>\r\n              <td>{temp.hvt}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemperatureDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}