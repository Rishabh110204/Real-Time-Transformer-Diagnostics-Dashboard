{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\All_Temp\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\nimport { Line } from 'react-chartjs-2';\nimport { Chart, defaults, elements, registerables } from 'chart.js';\nimport './Temp.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\ndefaults.maintainAspectRatio = false;\ndefaults.responsive = true;\ndefaults.plugins.title.align = \"start\";\nconst database = getDatabase(app);\n\n// Set the maximum number of data points to display\n\nconst TemperatureChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    ot: [],\n    lvt: [],\n    lv1t: [],\n    lv2t: [],\n    hvt: []\n  });\n  const [hovered, setHovered] = useState(false);\n  useEffect(() => {\n    const dataRef = ref(database, 'realtimedata');\n    const unsubscribe = onValue(dataRef, snapshot => {\n      if (snapshot.exists()) {\n        const newData = snapshot.val();\n        setChartData(prevState => {\n          const labels = [...prevState.labels, new Date().toLocaleTimeString()];\n          const ot = [...prevState.ot, newData.ot];\n          const lvt = [...prevState.lvt, newData.lvt];\n          const lv1t = [...prevState.lv1t, newData.lv1t];\n          const lv2t = [...prevState.lv2t, newData.lv2t];\n          const hvt = [...prevState.hvt, newData.hvt];\n\n          // Ensure arrays do not exceed the maximum number of data points\n          if (labels.length > 10) {\n            labels.shift();\n            ot.shift();\n            lvt.shift();\n            lv1t.shift();\n            lv2t.shift();\n            hvt.shift();\n          }\n          return {\n            labels,\n            ot,\n            lvt,\n            lv1t,\n            lv2t,\n            hvt\n          };\n        });\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const lineOptions = showScales => ({\n    responsive: true,\n    maintainAspectRatio: true,\n    elements: {\n      line: {\n        tension: 0.4 // Set the tension for the line (0.4 is an example value)\n      }\n    },\n    plugins: {\n      legend: {\n        display: false // Hide legend to match the example image\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: true\n      }\n    },\n    scales: {\n      x: {\n        display: showScales // Show x-axis on hover\n      },\n      y: {\n        display: showScales,\n        // Show y-axis on hover\n        min: -40,\n        // Set the minimum value for the y-axis\n        max: 120 // Set the maximum value for the y-axis\n      }\n    }\n  });\n  const renderLineChart = (data, label, borderColor, backgroundColor) => {\n    const currentTemperature = data[data.length - 1]; // Get the latest temperature\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      onMouseEnter: () => setHovered(true),\n      onMouseLeave: () => setHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary\",\n        children: [currentTemperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-sub\",\n        children: \"Current Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: chartData.labels,\n          datasets: [{\n            animation: true,\n            label,\n            data,\n            borderColor,\n            backgroundColor,\n            borderWidth: 2,\n            fill: false\n          }]\n        },\n        options: lineOptions(hovered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-chart-wrapper\",\n    children: [renderLineChart(chartData.ot, 'Oil Temperature', 'rgba(75,192,192,1)', 'rgba(75,192,192,0.2)'), renderLineChart(chartData.lvt, 'LV Winding Temperature', 'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 0.2)'), renderLineChart(chartData.lv1t, 'LV1 Winding Temperature', 'rgba(255, 206, 86, 1)', 'rgba(255, 206, 86, 0.2)'), renderLineChart(chartData.lv2t, 'LV2 Winding Temperature', 'rgba(153, 102, 255, 1)', 'rgba(153, 102, 255, 0.2)'), renderLineChart(chartData.hvt, 'HV Winding Temperature', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureChart, \"iuqnXtdo1kYMhRixEUxULdgu6X8=\");\n_c = TemperatureChart;\nexport default TemperatureChart;\nvar _c;\n$RefreshReg$(_c, \"TemperatureChart\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","onValue","app","Line","Chart","defaults","elements","registerables","jsxDEV","_jsxDEV","register","maintainAspectRatio","responsive","plugins","title","align","database","TemperatureChart","_s","chartData","setChartData","labels","ot","lvt","lv1t","lv2t","hvt","hovered","setHovered","dataRef","unsubscribe","snapshot","exists","newData","val","prevState","Date","toLocaleTimeString","length","shift","lineOptions","showScales","line","tension","legend","display","tooltip","mode","intersect","scales","x","y","min","max","renderLineChart","data","label","borderColor","backgroundColor","currentTemperature","className","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","animation","borderWidth","fill","options","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/All_Temp/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, onValue } from 'firebase/database';\r\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart, defaults, elements, registerables } from 'chart.js';\r\nimport './Temp.css'; // Ensure this path is correct\r\n\r\nChart.register(...registerables);\r\n\r\ndefaults.maintainAspectRatio = false;\r\ndefaults.responsive = true;\r\n\r\ndefaults.plugins.title.align = \"start\";\r\n\r\nconst database = getDatabase(app);\r\n\r\n // Set the maximum number of data points to display\r\n\r\nconst TemperatureChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    ot: [],\r\n    lvt: [],\r\n    lv1t: [],\r\n    lv2t: [],\r\n    hvt: []\r\n  });\r\n\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const dataRef = ref(database, 'realtimedata');\r\n    const unsubscribe = onValue(dataRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const newData = snapshot.val();\r\n\r\n        setChartData(prevState => {\r\n          const labels = [...prevState.labels, new Date().toLocaleTimeString()];\r\n          const ot = [...prevState.ot, newData.ot];\r\n          const lvt = [...prevState.lvt, newData.lvt];\r\n          const lv1t = [...prevState.lv1t, newData.lv1t];\r\n          const lv2t = [...prevState.lv2t, newData.lv2t];\r\n          const hvt = [...prevState.hvt, newData.hvt];\r\n\r\n          // Ensure arrays do not exceed the maximum number of data points\r\n          if (labels.length > 10) {\r\n            labels.shift();\r\n            ot.shift();\r\n            lvt.shift();\r\n            lv1t.shift();\r\n            lv2t.shift();\r\n            hvt.shift();\r\n          }\r\n\r\n          return {\r\n            labels,\r\n            ot,\r\n            lvt,\r\n            lv1t,\r\n            lv2t,\r\n            hvt\r\n          };\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const lineOptions = (showScales) => ({\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    elements: {\r\n        line: {\r\n          tension: 0.4, // Set the tension for the line (0.4 is an example value)\r\n        }\r\n      },\r\n    plugins: {\r\n      legend: {\r\n        display: false // Hide legend to match the example image\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: true\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: showScales // Show x-axis on hover\r\n      },\r\n      y: {\r\n        display: showScales, // Show y-axis on hover\r\n        min: -40, // Set the minimum value for the y-axis\r\n        max: 120, // Set the maximum value for the y-axis\r\n      }\r\n    }\r\n  });\r\n\r\n  const renderLineChart = (data, label, borderColor, backgroundColor) => {\r\n    const currentTemperature = data[data.length - 1]; // Get the latest temperature\r\n    return (\r\n      <div\r\n        className=\"chart-container\"\r\n        onMouseEnter={() => setHovered(true)}\r\n        onMouseLeave={() => setHovered(false)}\r\n      >\r\n        <h4>{label}</h4>\r\n        <div className=\"summary\">{currentTemperature}Â°C</div>\r\n        <div className=\"summary-sub\">Current Temperature</div>\r\n        <Line\r\n          data={{\r\n            labels: chartData.labels,\r\n            datasets: [{\r\n              animation: true,\r\n              label,\r\n              data,\r\n              borderColor,\r\n              backgroundColor,\r\n              borderWidth: 2,\r\n              fill: false\r\n            }]\r\n          }}\r\n          options={lineOptions(hovered)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"temperature-chart-wrapper\">\r\n      {renderLineChart(chartData.ot, 'Oil Temperature', 'rgba(75,192,192,1)', 'rgba(75,192,192,0.2)')}\r\n      {renderLineChart(chartData.lvt, 'LV Winding Temperature', 'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 0.2)')}\r\n      {renderLineChart(chartData.lv1t, 'LV1 Winding Temperature', 'rgba(255, 206, 86, 1)', 'rgba(255, 206, 86, 0.2)')}\r\n      {renderLineChart(chartData.lv2t, 'LV2 Winding Temperature', 'rgba(153, 102, 255, 1)', 'rgba(153, 102, 255, 0.2)')}\r\n      {renderLineChart(chartData.hvt, 'HV Winding Temperature', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,GAAG,EAAEC,OAAO,QAAQ,mBAAmB;AAC7D,SAASC,GAAG,QAAQ,gBAAgB,CAAC,CAAC;AACtC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,UAAU;AACnE,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErBL,KAAK,CAACM,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAEhCF,QAAQ,CAACM,mBAAmB,GAAG,KAAK;AACpCN,QAAQ,CAACO,UAAU,GAAG,IAAI;AAE1BP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;AAEtC,MAAMC,QAAQ,GAAGjB,WAAW,CAACG,GAAG,CAAC;;AAEhC;;AAED,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC;IACzCwB,MAAM,EAAE,EAAE;IACVC,EAAE,EAAE,EAAE;IACNC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAM+B,OAAO,GAAG7B,GAAG,CAACgB,QAAQ,EAAE,cAAc,CAAC;IAC7C,MAAMc,WAAW,GAAG7B,OAAO,CAAC4B,OAAO,EAAGE,QAAQ,IAAK;MACjD,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMC,OAAO,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;QAE9Bd,YAAY,CAACe,SAAS,IAAI;UACxB,MAAMd,MAAM,GAAG,CAAC,GAAGc,SAAS,CAACd,MAAM,EAAE,IAAIe,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;UACrE,MAAMf,EAAE,GAAG,CAAC,GAAGa,SAAS,CAACb,EAAE,EAAEW,OAAO,CAACX,EAAE,CAAC;UACxC,MAAMC,GAAG,GAAG,CAAC,GAAGY,SAAS,CAACZ,GAAG,EAAEU,OAAO,CAACV,GAAG,CAAC;UAC3C,MAAMC,IAAI,GAAG,CAAC,GAAGW,SAAS,CAACX,IAAI,EAAES,OAAO,CAACT,IAAI,CAAC;UAC9C,MAAMC,IAAI,GAAG,CAAC,GAAGU,SAAS,CAACV,IAAI,EAAEQ,OAAO,CAACR,IAAI,CAAC;UAC9C,MAAMC,GAAG,GAAG,CAAC,GAAGS,SAAS,CAACT,GAAG,EAAEO,OAAO,CAACP,GAAG,CAAC;;UAE3C;UACA,IAAIL,MAAM,CAACiB,MAAM,GAAG,EAAE,EAAE;YACtBjB,MAAM,CAACkB,KAAK,CAAC,CAAC;YACdjB,EAAE,CAACiB,KAAK,CAAC,CAAC;YACVhB,GAAG,CAACgB,KAAK,CAAC,CAAC;YACXf,IAAI,CAACe,KAAK,CAAC,CAAC;YACZd,IAAI,CAACc,KAAK,CAAC,CAAC;YACZb,GAAG,CAACa,KAAK,CAAC,CAAC;UACb;UAEA,OAAO;YACLlB,MAAM;YACNC,EAAE;YACFC,GAAG;YACHC,IAAI;YACJC,IAAI;YACJC;UACF,CAAC;QACH,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXI,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,WAAW,GAAIC,UAAU,KAAM;IACnC7B,UAAU,EAAE,IAAI;IAChBD,mBAAmB,EAAE,IAAI;IACzBL,QAAQ,EAAE;MACNoC,IAAI,EAAE;QACJC,OAAO,EAAE,GAAG,CAAE;MAChB;IACF,CAAC;IACH9B,OAAO,EAAE;MACP+B,MAAM,EAAE;QACNC,OAAO,EAAE,KAAK,CAAC;MACjB,CAAC;MACDC,OAAO,EAAE;QACPC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE;MACb;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDL,OAAO,EAAEJ,UAAU,CAAC;MACtB,CAAC;MACDU,CAAC,EAAE;QACDN,OAAO,EAAEJ,UAAU;QAAE;QACrBW,GAAG,EAAE,CAAC,EAAE;QAAE;QACVC,GAAG,EAAE,GAAG,CAAE;MACZ;IACF;EACF,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,WAAW,EAAEC,eAAe,KAAK;IACrE,MAAMC,kBAAkB,GAAGJ,IAAI,CAACA,IAAI,CAACjB,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,oBACE7B,OAAA;MACEmD,SAAS,EAAC,iBAAiB;MAC3BC,YAAY,EAAEA,CAAA,KAAMjC,UAAU,CAAC,IAAI,CAAE;MACrCkC,YAAY,EAAEA,CAAA,KAAMlC,UAAU,CAAC,KAAK,CAAE;MAAAmC,QAAA,gBAEtCtD,OAAA;QAAAsD,QAAA,EAAKP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChB1D,OAAA;QAAKmD,SAAS,EAAC,SAAS;QAAAG,QAAA,GAAEJ,kBAAkB,EAAC,OAAE;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrD1D,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAG,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtD1D,OAAA,CAACN,IAAI;QACHoD,IAAI,EAAE;UACJlC,MAAM,EAAEF,SAAS,CAACE,MAAM;UACxB+C,QAAQ,EAAE,CAAC;YACTC,SAAS,EAAE,IAAI;YACfb,KAAK;YACLD,IAAI;YACJE,WAAW;YACXC,eAAe;YACfY,WAAW,EAAE,CAAC;YACdC,IAAI,EAAE;UACR,CAAC;QACH,CAAE;QACFC,OAAO,EAAEhC,WAAW,CAACb,OAAO;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACE1D,OAAA;IAAKmD,SAAS,EAAC,2BAA2B;IAAAG,QAAA,GACvCT,eAAe,CAACnC,SAAS,CAACG,EAAE,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,sBAAsB,CAAC,EAC9FgC,eAAe,CAACnC,SAAS,CAACI,GAAG,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,yBAAyB,CAAC,EAC5G+B,eAAe,CAACnC,SAAS,CAACK,IAAI,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,yBAAyB,CAAC,EAC9G8B,eAAe,CAACnC,SAAS,CAACM,IAAI,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,0BAA0B,CAAC,EAChH6B,eAAe,CAACnC,SAAS,CAACO,GAAG,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,yBAAyB,CAAC;EAAA;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1G,CAAC;AAEV,CAAC;AAAAjD,EAAA,CAzHKD,gBAAgB;AAAAwD,EAAA,GAAhBxD,gBAAgB;AA2HtB,eAAeA,gBAAgB;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}