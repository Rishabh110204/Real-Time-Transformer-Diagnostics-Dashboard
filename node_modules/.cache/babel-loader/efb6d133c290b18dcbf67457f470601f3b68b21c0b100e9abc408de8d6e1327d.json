{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\All_Temp\\\\index.jsx\",\n  _s = $RefreshSig$();\n// TemperatureChart.js\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst database = getDatabase(app);\nconst TemperatureChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Oil Temperature',\n      data: [],\n      borderColor: 'rgba(75,192,192,1)',\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderWidth: 2,\n      fill: true\n    }, {\n      label: 'LV Winding Temperature',\n      data: [],\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      borderWidth: 2,\n      fill: true\n    }, {\n      label: 'LV1 Winding Temperature',\n      data: [],\n      borderColor: 'rgba(255, 206, 86, 1)',\n      backgroundColor: 'rgba(255, 206, 86, 0.2)',\n      borderWidth: 2,\n      fill: true\n    }, {\n      label: 'LV2 Winding Temperature',\n      data: [],\n      borderColor: 'rgba(153, 102, 255, 1)',\n      backgroundColor: 'rgba(153, 102, 255, 0.2)',\n      borderWidth: 2,\n      fill: true\n    }, {\n      label: 'HV Winding Temperature',\n      data: [],\n      borderColor: 'rgba(255, 99, 132, 1)',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderWidth: 2,\n      fill: true\n    }]\n  });\n  useEffect(() => {\n    const dataRef = ref(database, 'realtimedata');\n    const unsubscribe = onValue(dataRef, snapshot => {\n      if (snapshot.exists()) {\n        const newData = snapshot.val();\n        setChartData(prevState => ({\n          labels: [...prevState.labels, new Date().toLocaleTimeString()],\n          datasets: [{\n            ...prevState.datasets[0],\n            data: [...prevState.datasets[0].data, newData.ot]\n          }, {\n            ...prevState.datasets[1],\n            data: [...prevState.datasets[1].data, newData.lvt]\n          }, {\n            ...prevState.datasets[2],\n            data: [...prevState.datasets[2].data, newData.lv1t]\n          }, {\n            ...prevState.datasets[3],\n            data: [...prevState.datasets[3].data, newData.lv2t]\n          }, {\n            ...prevState.datasets[4],\n            data: [...prevState.datasets[4].data, newData.hvt]\n          }]\n        }));\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: 'auto',\n      height: '80%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Real-Time Temperature Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Temperature (°C)'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureChart, \"1+hbA6n4ojULxPpqVwtx0Hy/Zn4=\");\n_c = TemperatureChart;\nexport default TemperatureChart;\nvar _c;\n$RefreshReg$(_c, \"TemperatureChart\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","onValue","app","Line","Chart","registerables","jsxDEV","_jsxDEV","register","database","TemperatureChart","_s","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","borderWidth","fill","dataRef","unsubscribe","snapshot","exists","newData","val","prevState","Date","toLocaleTimeString","ot","lvt","lv1t","lv2t","hvt","style","width","margin","height","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","maintainAspectRatio","plugins","legend","display","position","tooltip","mode","intersect","scales","x","title","text","y","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/All_Temp/index.jsx"],"sourcesContent":["// TemperatureChart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, onValue } from 'firebase/database';\r\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nconst database = getDatabase(app);\r\n\r\nconst TemperatureChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: 'Oil Temperature',\r\n        data: [],\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        backgroundColor: 'rgba(75,192,192,0.2)',\r\n        borderWidth: 2,\r\n        fill: true\r\n      },\r\n      {\r\n        label: 'LV Winding Temperature',\r\n        data: [],\r\n        borderColor: 'rgba(54, 162, 235, 1)',\r\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n        borderWidth: 2,\r\n        fill: true\r\n      },\r\n      {\r\n        label: 'LV1 Winding Temperature',\r\n        data: [],\r\n        borderColor: 'rgba(255, 206, 86, 1)',\r\n        backgroundColor: 'rgba(255, 206, 86, 0.2)',\r\n        borderWidth: 2,\r\n        fill: true\r\n      },\r\n      {\r\n        label: 'LV2 Winding Temperature',\r\n        data: [],\r\n        borderColor: 'rgba(153, 102, 255, 1)',\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderWidth: 2,\r\n        fill: true\r\n      },\r\n      {\r\n        label: 'HV Winding Temperature',\r\n        data: [],\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        borderWidth: 2,\r\n        fill: true\r\n      }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const dataRef = ref(database, 'realtimedata');\r\n    const unsubscribe = onValue(dataRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const newData = snapshot.val();\r\n\r\n        setChartData(prevState => ({\r\n          labels: [...prevState.labels, new Date().toLocaleTimeString()],\r\n          datasets: [\r\n            {\r\n              ...prevState.datasets[0],\r\n              data: [...prevState.datasets[0].data, newData.ot]\r\n            },\r\n            {\r\n              ...prevState.datasets[1],\r\n              data: [...prevState.datasets[1].data, newData.lvt]\r\n            },\r\n            {\r\n              ...prevState.datasets[2],\r\n              data: [...prevState.datasets[2].data, newData.lv1t]\r\n            },\r\n            {\r\n              ...prevState.datasets[3],\r\n              data: [...prevState.datasets[3].data, newData.lv2t]\r\n            },\r\n            {\r\n              ...prevState.datasets[4],\r\n              data: [...prevState.datasets[4].data, newData.hvt]\r\n            }\r\n          ]\r\n        }));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '80%', margin: 'auto', height: '80%' }}>\r\n      <h3>Real-Time Temperature Data</h3>\r\n      <Line\r\n        data={chartData}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top'\r\n            },\r\n            tooltip: {\r\n              mode: 'index',\r\n              intersect: false\r\n            }\r\n          },\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Time'\r\n              }\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Temperature (°C)'\r\n              }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}