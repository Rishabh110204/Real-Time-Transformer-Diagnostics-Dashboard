{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\components\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import { initializeApp } from 'firebase/app';\nimport { get, ref, onValue } from 'firebase/database';\n//import { useNavigate } from 'react-router-dom';\nimport HPS_logo from \"../assets/HPS_logo.webp\";\nimport \"./HomePage.css\";\nimport { database } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [realtimedata, setrealtimedata] = useState({});\n  const [coordinates, setCoordinates] = useState({\n    lat: '',\n    lng: ''\n  });\n  //const navigate = useNavigate();\n\n  useEffect(() => {\n    const realtimeRef = ref(database, 'realtimedata');\n    get(realtimeRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const realtimeArray = Object.entries(snapshot.val()).map(([id, data]) => ({\n          id,\n          ...data\n        }));\n        setrealtimedata(realtimeArray);\n      } else {\n        console.log('no data there');\n      }\n    });\n\n    // const unsubscribe = onValue(dataRef, (snapshot) => {\n    //   if (snapshot.exists()) {\n    //     setData(snapshot.val());\n    //   }\n    // }\n    // );\n\n    const coordRef = ref(database, 'coordinates');\n    const coordUnsubscribe = onValue(coordRef, snapshot => {\n      if (snapshot.exists()) {\n        setCoordinates(snapshot.val());\n      }\n    });\n    return () => {\n      unsubscribe();\n      coordUnsubscribe();\n    };\n  }, []);\n  const handleRedirect = () => {\n    // Replace with your desired link\n    window.location.href = 'https://example.com';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: HPS_logo,\n        alt: \"\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"data-box\",\n        children: realtimedata.map(realtime => /*#__PURE__*/_jsxDEV(\"div\", {}, realtime.ot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)\n        // <div class=\"data-row\">\n        //     <span class=\"data-label\">Oil Temperature:</span>\n        //     <span class=\"data-value\" key = {realtime.ot} ></span>\n        // </div>\n        // <div class=\"data-row\">\n        //     <span class=\"data-label\">lv Winding Temperature:</span>\n        //     <span class=\"data-value\" data-field=\"lvt\"></span>\n        // </div>\n        // <div class=\"data-row\">\n        //     <span class=\"data-label\">lv1 Winding Temperature:</span>\n        //     <span class=\"data-value\" data-field=\"lv1t\"></span>\n        // </div>\n        // <div class=\"data-row\">\n        //     <span class=\"data-label\">lv2 Winding Temperature:</span>\n        //     <span class=\"data-value\" data-field=\"lv2t\"></span>\n        // </div>\n        // <div class=\"data-row\">\n        //     <span class=\"data-label\">hv Winding Temperature:</span>\n        //     <span class=\"data-value\" data-field=\"hvt\"></span>\n        // </div>\n        // <div class=\"data-row\">\n        //     <span class=\"data-label\">Humidity:</span>\n        //     <span class=\"data-value\" data-field=\"hum\"></span>\n        // </div>\n        // <div class=\"data-row\" id=\"otha-row\">\n        //     <span class=\"data-label\">Oil temperature high alarm</span>\n        // </div>\n        // <div class=\"data-row\" id=\"lvtha-row\">\n        //     <span class=\"data-label\">Winding temperature high alarm</span>\n        // </div>\n        // <div class=\"data-row\" id=\"gora-row\">\n        //     <span class=\"data-label\">GOR alarm</span>\n        // </div>\n        // <div class=\"data-row\" id=\"moga-row\">\n        //     <span class=\"data-label\">Oil level low alarm</span>\n        // </div>\n        // <div class=\"data-row\" id=\"rly1-row\">\n        //     <span class=\"data-label\">Cooler on indication</span>\n        // </div>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedirect,\n        className: \"redirect-button\",\n        children: \"Get Data_log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coordinates\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Coordinates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Latitude: \", coordinates.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Longitude: \", coordinates.lng]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"2NHr5x3pqa0fewji/CcpA3AElHk=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","useEffect","get","ref","onValue","HPS_logo","database","jsxDEV","_jsxDEV","HomePage","realtimedata","setrealtimedata","coordinates","setCoordinates","lat","lng","realtimeRef","then","snapshot","exists","realtimeArray","Object","entries","val","map","id","data","console","log","coordRef","coordUnsubscribe","unsubscribe","handleRedirect","window","location","href","className","children","src","alt","fileName","lineNumber","columnNumber","class","realtime","ot","onClick","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/components/HomePage.js"],"sourcesContent":["'use client'\r\nimport React, { useState, useEffect } from 'react';\r\n//import { initializeApp } from 'firebase/app';\r\nimport { get, ref, onValue } from 'firebase/database';\r\n//import { useNavigate } from 'react-router-dom';\r\nimport HPS_logo from \"../assets/HPS_logo.webp\"\r\nimport \"./HomePage.css\"\r\nimport { database } from './firebase';\r\n\r\n\r\nexport default function HomePage() {\r\n  const [realtimedata, setrealtimedata] = useState({});\r\n  const [coordinates, setCoordinates] = useState({ lat: '', lng: '' });\r\n  //const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const realtimeRef = ref(database, 'realtimedata');\r\n    get(realtimeRef).then((snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const realtimeArray = Object.entries(snapshot.val()).map(([id, data]) => ({\r\n          id,\r\n          ...data,\r\n        }));\r\n        setrealtimedata (realtimeArray);\r\n      } else {\r\n        console.log('no data there');\r\n      }\r\n    })\r\n\r\n    // const unsubscribe = onValue(dataRef, (snapshot) => {\r\n    //   if (snapshot.exists()) {\r\n    //     setData(snapshot.val());\r\n    //   }\r\n    // }\r\n    // );\r\n\r\n    const coordRef = ref(database, 'coordinates');\r\n    const coordUnsubscribe = onValue(coordRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        setCoordinates(snapshot.val());\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      coordUnsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const handleRedirect = () => {\r\n    // Replace with your desired link\r\n    window.location.href = 'https://example.com';\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <header>\r\n        {/* <img src={HPS_logo} alt=\"\" width={100} height={50}/> */}\r\n        <img src={HPS_logo} alt=\"\" className='logo'/>\r\n      </header>\r\n      \r\n      <main>\r\n\r\n<div class=\"data-box\">\r\n\r\n  {realtimedata.map((realtime) =>( \r\n\r\n      <div key={realtime.ot } >\r\n        </div>\r\n        // <div class=\"data-row\">\r\n        //     <span class=\"data-label\">Oil Temperature:</span>\r\n        //     <span class=\"data-value\" key = {realtime.ot} ></span>\r\n        // </div>\r\n        // <div class=\"data-row\">\r\n        //     <span class=\"data-label\">lv Winding Temperature:</span>\r\n        //     <span class=\"data-value\" data-field=\"lvt\"></span>\r\n        // </div>\r\n        // <div class=\"data-row\">\r\n        //     <span class=\"data-label\">lv1 Winding Temperature:</span>\r\n        //     <span class=\"data-value\" data-field=\"lv1t\"></span>\r\n        // </div>\r\n        // <div class=\"data-row\">\r\n        //     <span class=\"data-label\">lv2 Winding Temperature:</span>\r\n        //     <span class=\"data-value\" data-field=\"lv2t\"></span>\r\n        // </div>\r\n        // <div class=\"data-row\">\r\n        //     <span class=\"data-label\">hv Winding Temperature:</span>\r\n        //     <span class=\"data-value\" data-field=\"hvt\"></span>\r\n        // </div>\r\n        // <div class=\"data-row\">\r\n        //     <span class=\"data-label\">Humidity:</span>\r\n        //     <span class=\"data-value\" data-field=\"hum\"></span>\r\n        // </div>\r\n        // <div class=\"data-row\" id=\"otha-row\">\r\n        //     <span class=\"data-label\">Oil temperature high alarm</span>\r\n        // </div>\r\n        // <div class=\"data-row\" id=\"lvtha-row\">\r\n        //     <span class=\"data-label\">Winding temperature high alarm</span>\r\n        // </div>\r\n        // <div class=\"data-row\" id=\"gora-row\">\r\n        //     <span class=\"data-label\">GOR alarm</span>\r\n        // </div>\r\n        // <div class=\"data-row\" id=\"moga-row\">\r\n        //     <span class=\"data-label\">Oil level low alarm</span>\r\n        // </div>\r\n        // <div class=\"data-row\" id=\"rly1-row\">\r\n        //     <span class=\"data-label\">Cooler on indication</span>\r\n        // </div>\r\n\r\n        ))}\r\n    </div>\r\n\r\n        \r\n        <button onClick={handleRedirect} className=\"redirect-button\">\r\n          Get Data_log\r\n        </button>\r\n        \r\n        <div className=\"coordinates\">\r\n          <h3>Current Coordinates</h3>\r\n          <p>Latitude: {coordinates.lat}</p>\r\n          <p>Longitude: {coordinates.lng}</p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}