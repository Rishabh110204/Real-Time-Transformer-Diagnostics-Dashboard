{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\All_Temp\\\\index.jsx\",\n  _s = $RefreshSig$();\n// TemperatureChart.js\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst database = getDatabase(app);\nconst TemperatureChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    ot: [],\n    lvt: [],\n    lv1t: [],\n    lv2t: [],\n    hvt: []\n  });\n  useEffect(() => {\n    const dataRef = ref(database, 'realtimedata');\n    const unsubscribe = onValue(dataRef, snapshot => {\n      if (snapshot.exists()) {\n        const newData = snapshot.val();\n        setChartData(prevState => ({\n          labels: [...prevState.labels, new Date().toLocaleTimeString()],\n          ot: [...prevState.ot, newData.ot],\n          lvt: [...prevState.lvt, newData.lvt],\n          lv1t: [...prevState.lv1t, newData.lv1t],\n          lv2t: [...prevState.lv2t, newData.lv2t],\n          hvt: [...prevState.hvt, newData.hvt]\n        }));\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const lineOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Temperature (°C)'\n        }\n      }\n    }\n  };\n  const renderLineChart = (data, label, borderColor, backgroundColor) => /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: chartData.labels,\n      datasets: [{\n        label,\n        data,\n        borderColor,\n        backgroundColor,\n        borderWidth: 2,\n        fill: true\n      }]\n    },\n    options: lineOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: 'auto',\n      height: '80%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Real-Time Temperature Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '20%'\n      },\n      children: renderLineChart(chartData.ot, 'Oil Temperature', 'rgba(75,192,192,1)', 'rgba(75,192,192,0.2)')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '20%'\n      },\n      children: renderLineChart(chartData.lvt, 'LV Winding Temperature', 'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 0.2)')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '20%'\n      },\n      children: renderLineChart(chartData.lv1t, 'LV1 Winding Temperature', 'rgba(255, 206, 86, 1)', 'rgba(255, 206, 86, 0.2)')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '20%'\n      },\n      children: renderLineChart(chartData.lv2t, 'LV2 Winding Temperature', 'rgba(153, 102, 255, 1)', 'rgba(153, 102, 255, 0.2)')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '20%'\n      },\n      children: renderLineChart(chartData.hvt, 'HV Winding Temperature', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureChart, \"N6ZJn5C2a7lDB8b3067I2S/YnSA=\");\n_c = TemperatureChart;\nexport default TemperatureChart;\nvar _c;\n$RefreshReg$(_c, \"TemperatureChart\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","onValue","app","Line","Chart","registerables","jsxDEV","_jsxDEV","register","database","TemperatureChart","_s","chartData","setChartData","labels","ot","lvt","lv1t","lv2t","hvt","dataRef","unsubscribe","snapshot","exists","newData","val","prevState","Date","toLocaleTimeString","lineOptions","responsive","maintainAspectRatio","plugins","legend","display","position","tooltip","mode","intersect","scales","x","title","text","y","renderLineChart","data","label","borderColor","backgroundColor","datasets","borderWidth","fill","options","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","height","children","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/All_Temp/index.jsx"],"sourcesContent":["// TemperatureChart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, onValue } from 'firebase/database';\r\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nconst database = getDatabase(app);\r\n\r\nconst TemperatureChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    ot: [],\r\n    lvt: [],\r\n    lv1t: [],\r\n    lv2t: [],\r\n    hvt: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    const dataRef = ref(database, 'realtimedata');\r\n    const unsubscribe = onValue(dataRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const newData = snapshot.val();\r\n\r\n        setChartData(prevState => ({\r\n          labels: [...prevState.labels, new Date().toLocaleTimeString()],\r\n          ot: [...prevState.ot, newData.ot],\r\n          lvt: [...prevState.lvt, newData.lvt],\r\n          lv1t: [...prevState.lv1t, newData.lv1t],\r\n          lv2t: [...prevState.lv2t, newData.lv2t],\r\n          hvt: [...prevState.hvt, newData.hvt]\r\n        }));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Time'\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Temperature (°C)'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderLineChart = (data, label, borderColor, backgroundColor) => (\r\n    <Line\r\n      data={{\r\n        labels: chartData.labels,\r\n        datasets: [{\r\n          label,\r\n          data,\r\n          borderColor,\r\n          backgroundColor,\r\n          borderWidth: 2,\r\n          fill: true\r\n        }]\r\n      }}\r\n      options={lineOptions}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: '80%', margin: 'auto', height: '80%' }}>\r\n      <h3>Real-Time Temperature Data</h3>\r\n      <div style={{ height: '20%' }}>\r\n        {renderLineChart(chartData.ot, 'Oil Temperature', 'rgba(75,192,192,1)', 'rgba(75,192,192,0.2)')}\r\n      </div>\r\n      <div style={{ height: '20%' }}>\r\n        {renderLineChart(chartData.lvt, 'LV Winding Temperature', 'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 0.2)')}\r\n      </div>\r\n      <div style={{ height: '20%' }}>\r\n        {renderLineChart(chartData.lv1t, 'LV1 Winding Temperature', 'rgba(255, 206, 86, 1)', 'rgba(255, 206, 86, 0.2)')}\r\n      </div>\r\n      <div style={{ height: '20%' }}>\r\n        {renderLineChart(chartData.lv2t, 'LV2 Winding Temperature', 'rgba(153, 102, 255, 1)', 'rgba(153, 102, 255, 0.2)')}\r\n      </div>\r\n      <div style={{ height: '20%' }}>\r\n        {renderLineChart(chartData.hvt, 'HV Winding Temperature', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}