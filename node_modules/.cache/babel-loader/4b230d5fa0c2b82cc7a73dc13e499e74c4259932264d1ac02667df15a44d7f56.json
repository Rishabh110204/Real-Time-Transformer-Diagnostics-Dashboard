{"ast":null,"code":"var _jsxFileName = \"D:\\\\000 IMP\\\\hps\\\\src\\\\scenes\\\\All_Temp\\\\index.jsx\",\n  _s = $RefreshSig$();\n// TemperatureChart.js\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\nimport { Line } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport './Temp.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst database = getDatabase(app);\nconst MAX_DATA_POINTS = 10; // Set the maximum number of data points to display\n\nconst TemperatureChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    ot: [],\n    lvt: [],\n    lv1t: [],\n    lv2t: [],\n    hvt: []\n  });\n  useEffect(() => {\n    const dataRef = ref(database, 'realtimedata');\n    const unsubscribe = onValue(dataRef, snapshot => {\n      if (snapshot.exists()) {\n        const newData = snapshot.val();\n        setChartData(prevState => {\n          const labels = [...prevState.labels, new Date().toLocaleTimeString()];\n          const ot = [...prevState.ot, newData.ot];\n          const lvt = [...prevState.lvt, newData.lvt];\n          const lv1t = [...prevState.lv1t, newData.lv1t];\n          const lv2t = [...prevState.lv2t, newData.lv2t];\n          const hvt = [...prevState.hvt, newData.hvt];\n\n          // Ensure arrays do not exceed the maximum number of data points\n          if (labels.length > MAX_DATA_POINTS) {\n            labels.shift();\n            ot.shift();\n            lvt.shift();\n            lv1t.shift();\n            lv2t.shift();\n            hvt.shift();\n          }\n          return {\n            labels,\n            ot,\n            lvt,\n            lv1t,\n            lv2t,\n            hvt\n          };\n        });\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const lineOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Temperature (°C)'\n        }\n      }\n    }\n  };\n  const renderLineChart = (data, label, borderColor, backgroundColor) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chartData.labels,\n        datasets: [{\n          label,\n          data,\n          borderColor,\n          backgroundColor,\n          borderWidth: 2,\n          fill: true\n        }]\n      },\n      options: lineOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-chart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Real-Time Temperature Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), renderLineChart(chartData.ot, 'Oil Temperature', 'rgba(75,192,192,1)', 'rgba(75,192,192,0.2)'), renderLineChart(chartData.lvt, 'LV Winding Temperature', 'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 0.2)'), renderLineChart(chartData.lv1t, 'LV1 Winding Temperature', 'rgba(255, 206, 86, 1)', 'rgba(255, 206, 86, 0.2)'), renderLineChart(chartData.lv2t, 'LV2 Winding Temperature', 'rgba(153, 102, 255, 1)', 'rgba(153, 102, 255, 0.2)'), renderLineChart(chartData.hvt, 'HV Winding Temperature', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureChart, \"N6ZJn5C2a7lDB8b3067I2S/YnSA=\");\n_c = TemperatureChart;\nexport default TemperatureChart;\nvar _c;\n$RefreshReg$(_c, \"TemperatureChart\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","onValue","app","Line","Chart","registerables","jsxDEV","_jsxDEV","register","database","MAX_DATA_POINTS","TemperatureChart","_s","chartData","setChartData","labels","ot","lvt","lv1t","lv2t","hvt","dataRef","unsubscribe","snapshot","exists","newData","val","prevState","Date","toLocaleTimeString","length","shift","lineOptions","responsive","maintainAspectRatio","plugins","legend","display","position","tooltip","mode","intersect","scales","x","title","text","y","renderLineChart","data","label","borderColor","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","borderWidth","fill","options","_c","$RefreshReg$"],"sources":["D:/000 IMP/hps/src/scenes/All_Temp/index.jsx"],"sourcesContent":["// TemperatureChart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, onValue } from 'firebase/database';\r\nimport { app } from \"../../firebase\"; // Adjust the path according to your project structure\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport './Temp.css'; // Ensure this path is correct\r\n\r\nChart.register(...registerables);\r\n\r\nconst database = getDatabase(app);\r\n\r\nconst MAX_DATA_POINTS = 10; // Set the maximum number of data points to display\r\n\r\nconst TemperatureChart = () => {\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    ot: [],\r\n    lvt: [],\r\n    lv1t: [],\r\n    lv2t: [],\r\n    hvt: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    const dataRef = ref(database, 'realtimedata');\r\n    const unsubscribe = onValue(dataRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const newData = snapshot.val();\r\n\r\n        setChartData(prevState => {\r\n          const labels = [...prevState.labels, new Date().toLocaleTimeString()];\r\n          const ot = [...prevState.ot, newData.ot];\r\n          const lvt = [...prevState.lvt, newData.lvt];\r\n          const lv1t = [...prevState.lv1t, newData.lv1t];\r\n          const lv2t = [...prevState.lv2t, newData.lv2t];\r\n          const hvt = [...prevState.hvt, newData.hvt];\r\n\r\n          // Ensure arrays do not exceed the maximum number of data points\r\n          if (labels.length > MAX_DATA_POINTS) {\r\n            labels.shift();\r\n            ot.shift();\r\n            lvt.shift();\r\n            lv1t.shift();\r\n            lv2t.shift();\r\n            hvt.shift();\r\n          }\r\n\r\n          return {\r\n            labels,\r\n            ot,\r\n            lvt,\r\n            lv1t,\r\n            lv2t,\r\n            hvt\r\n          };\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Time'\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Temperature (°C)'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderLineChart = (data, label, borderColor, backgroundColor) => (\r\n    <div className=\"chart-container\">\r\n      <h4>{label}</h4>\r\n      <Line\r\n        data={{\r\n          labels: chartData.labels,\r\n          datasets: [{\r\n            label,\r\n            data,\r\n            borderColor,\r\n            backgroundColor,\r\n            borderWidth: 2,\r\n            fill: true\r\n          }]\r\n        }}\r\n        options={lineOptions}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"temperature-chart-wrapper\">\r\n      <h3>Real-Time Temperature Data</h3>\r\n      {renderLineChart(chartData.ot, 'Oil Temperature', 'rgba(75,192,192,1)', 'rgba(75,192,192,0.2)')}\r\n      {renderLineChart(chartData.lvt, 'LV Winding Temperature', 'rgba(54, 162, 235, 1)', 'rgba(54, 162, 235, 0.2)')}\r\n      {renderLineChart(chartData.lv1t, 'LV1 Winding Temperature', 'rgba(255, 206, 86, 1)', 'rgba(255, 206, 86, 0.2)')}\r\n      {renderLineChart(chartData.lv2t, 'LV2 Winding Temperature', 'rgba(153, 102, 255, 1)', 'rgba(153, 102, 255, 0.2)')}\r\n      {renderLineChart(chartData.hvt, 'HV Winding Temperature', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}